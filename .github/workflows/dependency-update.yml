name: 📦 Dependency Management

on:
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      force_update:
        description: 'Force update even with breaking changes'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  # ==========================================
  # DEPENDENCY AUDIT
  # ==========================================
  dependency-audit:
    name: 🔍 Dependency Audit
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    outputs:
      backend-vulnerabilities: ${{ steps.audit.outputs.backend-vulnerabilities }}
      frontend-vulnerabilities: ${{ steps.audit.outputs.frontend-vulnerabilities }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/web/package-lock.json

      - name: 📦 Install dependencies
        run: |
          cd backend && npm ci
          cd ../frontend/web && npm ci

      - name: 🔍 Audit dependencies
        id: audit
        run: |
          echo "🔍 Auditing backend dependencies..."
          cd backend
          BACKEND_AUDIT=$(npm audit --audit-level=moderate --json || echo '{}')
          BACKEND_VULNS=$(echo "$BACKEND_AUDIT" | jq '.metadata.vulnerabilities.total // 0')
          
          echo "🔍 Auditing frontend dependencies..."
          cd ../frontend/web
          FRONTEND_AUDIT=$(npm audit --audit-level=moderate --json || echo '{}')
          FRONTEND_VULNS=$(echo "$FRONTEND_AUDIT" | jq '.metadata.vulnerabilities.total // 0')
          
          echo "backend-vulnerabilities=$BACKEND_VULNS" >> $GITHUB_OUTPUT
          echo "frontend-vulnerabilities=$FRONTEND_VULNS" >> $GITHUB_OUTPUT
          
          echo "📊 Backend vulnerabilities: $BACKEND_VULNS"
          echo "📊 Frontend vulnerabilities: $FRONTEND_VULNS"

      - name: 📊 Generate audit report
        run: |
          cat > dependency-audit-report.md << EOF
          # Dependency Audit Report
          
          **Generated:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          **Commit:** ${{ github.sha }}
          
          ## Summary
          - Backend vulnerabilities: ${{ steps.audit.outputs.backend-vulnerabilities }}
          - Frontend vulnerabilities: ${{ steps.audit.outputs.frontend-vulnerabilities }}
          
          ## Recommendations
          $(if [ "${{ steps.audit.outputs.backend-vulnerabilities }}" -gt "0" ] || [ "${{ steps.audit.outputs.frontend-vulnerabilities }}" -gt "0" ]; then
            echo "⚠️ Vulnerabilities found - immediate update recommended"
          else
            echo "✅ No vulnerabilities found - dependencies are secure"
          fi)
          EOF

      - name: 📤 Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-audit-report-${{ github.sha }}
          path: dependency-audit-report.md
          retention-days: 30

  # ==========================================
  # SECURITY UPDATES
  # ==========================================
  security-updates:
    name: 🔒 Security Updates
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [dependency-audit]
    if: needs.dependency-audit.outputs.backend-vulnerabilities > 0 || needs.dependency-audit.outputs.frontend-vulnerabilities > 0
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/web/package-lock.json

      - name: 🔒 Fix backend security vulnerabilities
        if: needs.dependency-audit.outputs.backend-vulnerabilities > 0
        run: |
          cd backend
          echo "🔒 Fixing backend security vulnerabilities..."
          npm audit fix --audit-level=moderate
          
          # Check if package-lock.json was modified
          if git diff --quiet package-lock.json; then
            echo "No changes made to package-lock.json"
          else
            echo "package-lock.json updated with security fixes"
          fi

      - name: 🔒 Fix frontend security vulnerabilities
        if: needs.dependency-audit.outputs.frontend-vulnerabilities > 0
        run: |
          cd frontend/web
          echo "🔒 Fixing frontend security vulnerabilities..."
          npm audit fix --audit-level=moderate
          
          # Check if package-lock.json was modified
          if git diff --quiet package-lock.json; then
            echo "No changes made to package-lock.json"
          else
            echo "package-lock.json updated with security fixes"
          fi

      - name: 🧪 Run tests after security fixes
        run: |
          echo "🧪 Running tests to verify security fixes..."
          cd backend && npm test
          cd ../frontend/web && npm test

      - name: 📝 Create security update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            🔒 Security: Fix dependency vulnerabilities
            
            - Backend vulnerabilities fixed: ${{ needs.dependency-audit.outputs.backend-vulnerabilities }}
            - Frontend vulnerabilities fixed: ${{ needs.dependency-audit.outputs.frontend-vulnerabilities }}
            
            Auto-generated by dependency-update workflow
          title: '🔒 Security: Fix dependency vulnerabilities'
          body: |
            ## 🔒 Security Dependency Updates
            
            This PR contains automatic security fixes for dependency vulnerabilities.
            
            ### Summary
            - **Backend vulnerabilities fixed:** ${{ needs.dependency-audit.outputs.backend-vulnerabilities }}
            - **Frontend vulnerabilities fixed:** ${{ needs.dependency-audit.outputs.frontend-vulnerabilities }}
            
            ### Changes
            - Updated vulnerable dependencies to secure versions
            - Ran `npm audit fix` for both backend and frontend
            - All tests pass after updates
            
            ### Medical Compliance
            ✅ Security updates maintain medical-grade compliance
            ✅ No breaking changes to critical medical functions
            ✅ Audit trail preserved
            
            **Auto-generated by:** `dependency-update` workflow
            **Generated at:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          branch: security/dependency-updates-${{ github.run_id }}
          delete-branch: true
          labels: |
            security
            dependencies
            automated

  # ==========================================
  # REGULAR UPDATES
  # ==========================================
  regular-updates:
    name: 📦 Regular Updates
    runs-on: ubuntu-latest
    timeout-minutes: 25
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/web/package-lock.json

      - name: 📦 Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: 🔍 Check for backend updates
        run: |
          cd backend
          echo "🔍 Checking for backend dependency updates..."
          ncu --format group --target ${{ inputs.update_type || 'patch' }}

      - name: 🔍 Check for frontend updates
        run: |
          cd frontend/web
          echo "🔍 Checking for frontend dependency updates..."
          ncu --format group --target ${{ inputs.update_type || 'patch' }}

      - name: 📦 Update backend dependencies
        run: |
          cd backend
          echo "📦 Updating backend dependencies..."
          ncu -u --target ${{ inputs.update_type || 'patch' }}
          npm install

      - name: 📦 Update frontend dependencies
        run: |
          cd frontend/web
          echo "📦 Updating frontend dependencies..."
          ncu -u --target ${{ inputs.update_type || 'patch' }}
          npm install

      - name: 🧪 Run comprehensive tests
        run: |
          echo "🧪 Running comprehensive tests after updates..."
          
          # Backend tests
          cd backend
          npm run lint
          npm test
          
          # Frontend tests
          cd ../frontend/web
          npm run lint
          npm run type-check
          npm test

      - name: 🏗️ Test builds
        run: |
          echo "🏗️ Testing builds after updates..."
          cd backend && npm run build
          cd ../frontend/web && npm run build

      - name: 📊 Generate update report
        run: |
          cat > dependency-update-report.md << EOF
          # Dependency Update Report
          
          **Generated:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          **Update Type:** ${{ inputs.update_type || 'patch' }}
          **Commit:** ${{ github.sha }}
          
          ## Backend Updates
          \`\`\`
          $(cd backend && git diff --name-only package.json package-lock.json || echo "No changes")
          \`\`\`
          
          ## Frontend Updates
          \`\`\`
          $(cd frontend/web && git diff --name-only package.json package-lock.json || echo "No changes")
          \`\`\`
          
          ## Test Results
          - ✅ Backend tests: Passed
          - ✅ Frontend tests: Passed
          - ✅ Build tests: Passed
          - ✅ Linting: Passed
          
          ## Medical Compliance
          - ✅ No breaking changes to medical functions
          - ✅ Temperature precision maintained
          - ✅ Audit logging preserved
          EOF

      - name: 📝 Create update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            📦 Dependencies: Update ${{ inputs.update_type || 'patch' }} versions
            
            - Updated backend dependencies
            - Updated frontend dependencies
            - All tests passing
            
            Auto-generated by dependency-update workflow
          title: "📦 Dependencies: Update ${{ inputs.update_type || 'patch' }} versions"
          body: |
            ## 📦 Dependency Updates
            
            This PR contains automatic dependency updates.
            
            ### Update Type
            **${{ inputs.update_type || 'patch' }}** updates applied
            
            ### Changes
            - Updated backend dependencies to latest ${{ inputs.update_type || 'patch' }} versions
            - Updated frontend dependencies to latest ${{ inputs.update_type || 'patch' }} versions
            - All tests pass after updates
            - All builds successful
            
            ### Testing
            - ✅ Backend tests passed
            - ✅ Frontend tests passed
            - ✅ Build verification passed
            - ✅ Linting passed
            - ✅ Type checking passed
            
            ### Medical Compliance
            ✅ No breaking changes to medical functions
            ✅ Temperature precision requirements maintained
            ✅ Audit logging functionality preserved
            ✅ Security standards maintained
            
            **Auto-generated by:** `dependency-update` workflow
            **Generated at:** $(date -u +%Y-%m-%dT%H:%M:%SZ)
          branch: dependencies/update-${{ inputs.update_type || 'patch' }}-${{ github.run_id }}
          delete-branch: true
          labels: |
            dependencies
            automated
            ${{ inputs.update_type || 'patch' }}

      - name: 📤 Upload update report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-update-report-${{ github.run_id }}
          path: dependency-update-report.md
          retention-days: 30
